<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="HR-Custom Rule" type="ResourceObjectCustomization">
          
    
    <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.

Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
          
    
    <Signature returnType="ResourceObject">
                    
        
        <Inputs>
                              
            
            <Argument name="log">
                                        
                
                <Description>
          The log object associated with the SailPointContext.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="context">
                                        
                
                <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="object">
                                        
                
                <Description>
          The ResourceObject built by the connector.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="application">
                                        
                
                <Description>
          Application that references the connector.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="connector">
                                        
                
                <Description>
          The connector object.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="state">
                                        
                
                <Description>
          A Map containing state information.
        </Description>
                                      
            
            </Argument>
                            
        
        </Inputs>
                    
        
        <Returns>
                              
            
            <Argument name="resourceObject">
                                        
                
                <Description>
          The updated resource object.
        </Description>
                                      
            
            </Argument>
                            
        
        </Returns>
                  
    
    </Signature>
          
    
    <Source><![CDATA[
  import sailpoint.object.*;
  import sailpoint.api.*;
  
  int count=0;
  List appList = new ArrayList();
  appList.add(app.getName());
  appList.add(application.getName());
  String accountName=object.getStringAttribute("Name");
Identity id = context.getObjectByName(Identity.class,accountName);
	Application app = context.getObjectByName(Application.class,"Test HR");
  List links = id.getLinks();
  if(links != null){
    for(Link link :links){
      if(appList.contains(link.getApplicationName())) count++;
    }
  }
  if(count>1){

	EmailOptions eo = new EmailOptions();
       EmailTemplate et = context.getObjectByName(EmailTemplate.class,"Create Account Mail2"); //pass the EmailTemplate object name here
       Map args = new HashMap();
       String mail = id.getEmail(); //set to-mail address here
       eo.setTo(mail);
       et.setSubject("Accounts already available in :"+app.getName()+" and "+app1.getName());
       String body="\tHello,\n\t"+id.getName()+" already has accounts in "+app.getName()+" and "+app1.getName()+"\n\tThank You\n";
       et.setBody(body);
  System.out.println("mailbody==="+et.getBody());
  args.put("ownerName",app1.getOwner().getName());
  eo.setVariables(args);
  context.sendEmailNotification(et,eo);
  }
  return resourceObject;
  
  ]]></Source>
        

</Rule>
