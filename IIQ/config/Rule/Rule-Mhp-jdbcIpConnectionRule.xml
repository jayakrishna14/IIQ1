<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="MHP-JDBC IP Connection Rule" type="Validation">
          
    
    <Source><![CDATA[

  import sailpoint.object.*;
  import sailpoint.api.*;
  import java.sql.*;
  import sailpoint.tools.JdbcUtil;
  import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
    import java.util.ArrayList;
  import java.util.Random;
  import java.util.List;
  import java.text.SimpleDateFormat;
  import java.text.ParseException;
  import java.util.Date;
  import java.util.*;
  import sailpoint.object.*;
  import sailpoint.tools.*;
  import sailpoint.api.*;
  import sailpoint.connector.*;
  import sailpoint.object.Attributes;
  import sailpoint.object.Filter;
  import sailpoint.object.Identity;
  import sailpoint.object.QueryOptions;
  import sailpoint.object.*;
  import sailpoint.connector.Connector;  
  import sailpoint.object.ResourceObject;
  
  Connection con = null;
  PreparedStatement ps = null;
  List l1 = new ArrayList();
  List l2 = new ArrayList();
  List l3=new ArrayList();
  Map map1 = new HashMap();

  Filter f = Filter.eq("managerStatus",true);
  //Filter f = Filter.eq("LifeCycleStatus","pending");
  QueryOptions qo = new QueryOptions();
  qo.addFilter(f);
  List identities = context.getObjects(Identity.class,qo);

  //To Get Connection of Database
  con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","8499041218");
  String sql = "select * from test.iptable";
  ps = con.prepareStatement(sql);
  ResultSet rs = ps.executeQuery();

  //converting the ResultSet into the Map
  Map map = new HashMap();
  while(rs.next()){
    l1.add(rs.getString("IP"));
    l2.add(rs.getString("used"));
    l3.add(rs.getString("userId"));
    map.put("IP", l1);
    map.put("used", l2);
    map.put("userId",l3);
  }

  //Executing our requirements
  for(Identity id : identities){
    if(id.getAttribute("ipAddress") != null){
      List ipAdrsess = map.get("IP");
      if(ipAdrsess.contains(id.getAttribute("ipAddress"))){
        int index = ipAdrsess.indexOf(id.getAttribute("ipAddress"));
        if(l2.get(index).equals("No")){
          String intProt = l1.get(index);
          String idname=id.getDisplayName();
          String updateQuery = "update test.iptable set used='Yes', userId=? where IP=?";
          PreparedStatement stmnt = con.prepareStatement(updateQuery);
          stmnt.setString(1, idname);
          stmnt.setString(2, intProt);
          stmnt.executeUpdate();
          id.setAttribute("phoneAndIPStatus","Allocated");
          context.saveObject(id);
          context.commitTransaction();
        }
      }
    }
  }


  ]]></Source>
        

</Rule>
