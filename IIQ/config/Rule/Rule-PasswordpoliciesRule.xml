<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="passwordPolicies Rule" type="Validation">
          
    
    <Source><![CDATA[
  import org.apache.log4j.Logger;
import org.apache.log4j.Level;
import sailpoint.object.*;
  import sailpoint.api.*;
  import sailpoint.tools.*;
  import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
  import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
  import sailpoint.object.ProvisioningPlan.AccountRequest.Operation;
  import com.roche.cidm.util.PasswordResetUtils;
 
 
  import sailpoint.object.TaskSchedule.State;
     import org.quartz.Scheduler;
  import sailpoint.scheduler.QuartzPersistenceManager;
    import org.apache.log4j.Logger;
  import org.apache.log4j.Level;
  import sailpoint.provisioning.PlanEvaluator;
       
  Identity identity=context.getObjectByName(Identity.class,"Angela Bell");
 ProvisioningPlan plan = new ProvisioningPlan();
 plan.setNativeIdentity("Angela Bell");
 plan.setIdentity(identity);
 AccountRequest accReq= new AccountRequest();
 accReq.setApplication("AD");
 accReq.setNativeIdentity("CN=Angela Bell,OU=People,OU=Demo,DC=Eshiam,DC=com");
     
     
      List<String> provPoliciesList = new ArrayList<String>();
provPoliciesList.add(Template.Usage.ChangePassword.name());
accReq.put("provisioningPolicies", provPoliciesList);
     
     
//To test null
     // accReq.add(new AttributeRequest("familyName",ProvisioningPlan.Operation.Set,null));
 
  // To test empty ""
      //accReq.add(new AttributeRequest("Roles",ProvisioningPlan.Operation.Remove,"/VIRSA/VFAT_ROLE_CONTROLLER"));
     // accReq.add(new AttributeRequest("Roles",ProvisioningPlan.Operation.Remove,"YLC_MC_6020"));
      //accReq.add(new AttributeRequest("Roles",ProvisioningPlan.Operation.Remove,"YLC_MC_KUALA_LUMPUR_SSC"));
     accReq.add(new AttributeRequest("password",ProvisioningPlan.Operation.Set,"Start8ps"));
    // accReq.add(new AttributeRequest(ProvisioningPlan.ATT_IIQ_ASSIGNED_ROLES,ProvisioningPlan.Operation.Add,"RocheBundleISSAdministratorBusiness"));
 
 
 accReq.setOperation(AccountRequest.Operation.Modify);
 plan.add(accReq);

 Provisioner pro = new Provisioner(context);
//  p.execute(plan);
     
        System.out.println("PLAN ISSSSSSSSSS ---"+plan.toXml());
     
       pro.setArgument(PlanEvaluator.ARG_NO_RETRY_REQUEST, true);
				ProvisioningProject project = pro.compile(plan);
     
     
      System.out.println("PLAN ISSSSSSSSSS ---"+plan.toXml());
     
     
				// LOG.info("Sending the new password");
				pro.execute(project);
     
       return project.getPlans().get(0).getAccountRequests().get(0).getResult();
     
     
      return "Success";
            
    ]]></Source>
        

</Rule>
